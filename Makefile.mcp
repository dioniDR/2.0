# Makefile.mcp - Reglas adicionales para MCP
# Este archivo se incluye en el Makefile principal

# Variables espec√≠ficas para MCP
MCP_BRIDGE = MCPBridge
MCP_BRIDGE_NATIVE = MCPBridge_native
MCP_CLIENT_SRCS = mcp_client.c
MAIN_MCP = main_mcp.c

# Compilar el bridge nativo
build_mcp_bridge:
	@echo "üî® Compilando MCP Bridge nativo..."
	@if [ ! -f $(MCP_BRIDGE).csproj ]; then \
		echo "‚ùå No se encontr√≥ MCPBridge.csproj"; \
		exit 1; \
	fi
	@echo "üì¶ Compilando a c√≥digo nativo (puede tardar 1-2 minutos)..."
	@dotnet publish $(MCP_BRIDGE).csproj -r linux-x64 -c Release -p:PublishAot=true -o ./
	@if [ -f $(MCP_BRIDGE) ]; then \
		mv $(MCP_BRIDGE) $(MCP_BRIDGE_NATIVE); \
		chmod +x $(MCP_BRIDGE_NATIVE); \
		echo "‚úÖ Bridge nativo compilado: $(MCP_BRIDGE_NATIVE)"; \
	else \
		echo "‚ùå Error al compilar el bridge"; \
		exit 1; \
	fi

# Compilar m√≥dulo arch_mcp
arch_mcp: build_mcp_bridge
	@echo "üî® Compilando m√≥dulo arch_mcp..."
	@if [ ! -f $(MCP_BRIDGE_NATIVE) ]; then \
		echo "‚ùå Bridge nativo no encontrado. Ejecutando build_mcp_bridge..."; \
		make -f Makefile.mcp build_mcp_bridge; \
	fi
	$(CC) $(CFLAGS) -DMODO_ARCH_MCP \
		$(INCLUDES) -Imodulos/arch_mcp \
		-o gpt_arch_mcp $(MAIN_MCP) $(COMMON_SRCS) $(API_SRCS) $(MCP_CLIENT_SRCS) modulos/arch_mcp/executor.c
	@echo "‚úÖ M√≥dulo arch_mcp compilado como: gpt_arch_mcp"
	@echo "üöÄ Para ejecutar: ./gpt_arch_mcp"

# Probar el bridge MCP
test_mcp:
	@echo "üîç Probando MCP Bridge..."
	@if [ -f $(MCP_BRIDGE_NATIVE) ]; then \
		echo "Probando comando get_system_info..."; \
		echo '{"Action":"get_system_info"}' | ./$(MCP_BRIDGE_NATIVE) | head -n 1 | grep -q "Success" \
		&& echo "‚úÖ Bridge MCP funciona correctamente" \
		|| echo "‚ùå Bridge MCP no responde correctamente"; \
	else \
		echo "‚ùå Bridge nativo no encontrado. Ejecuta 'make build_mcp_bridge'"; \
	fi

# Probar comando espec√≠fico
test_mcp_command:
	@echo "üîç Probando ejecuci√≥n de comando..."
	@if [ -f $(MCP_BRIDGE_NATIVE) ]; then \
		echo '{"Action":"execute_command","Data":"uname -a"}' | ./$(MCP_BRIDGE_NATIVE); \
	else \
		echo "‚ùå Bridge nativo no encontrado"; \
	fi

# Verificar dependencias para MCP
check_mcp_deps:
	@echo "üîç Verificando dependencias MCP..."
	@which dotnet > /dev/null || (echo "‚ùå .NET no est√° instalado"; exit 1)
	@dotnet --version | grep -q "8.0" || (echo "‚ùå Se requiere .NET 8.0+"; exit 1)
	@echo "‚úÖ .NET $(shell dotnet --version) encontrado"
	@which gcc > /dev/null || (echo "‚ùå GCC no est√° instalado"; exit 1)
	@echo "‚úÖ GCC encontrado"
	@echo "‚úÖ Todas las dependencias est√°n disponibles"

# Limpiar archivos MCP
clean_mcp:
	@echo "üßπ Limpiando archivos MCP..."
	rm -f gpt_arch_mcp
	rm -f $(MCP_BRIDGE_NATIVE)
	rm -f mcp_client.o
	rm -rf bin/ obj/
	@echo "‚úÖ Archivos MCP limpiados"

# Ayuda espec√≠fica para MCP
help_mcp:
	@echo "üöÄ Comandos MCP disponibles:"
	@echo "  make build_mcp_bridge  - Compilar bridge nativo"
	@echo "  make arch_mcp          - Compilar asistente con MCP"
	@echo "  make test_mcp          - Probar bridge MCP"
	@echo "  make test_mcp_command  - Probar ejecuci√≥n de comando"
	@echo "  make check_mcp_deps    - Verificar dependencias"
	@echo "  make clean_mcp         - Limpiar archivos MCP"
	@echo "  make help_mcp          - Mostrar esta ayuda"
	@echo ""
	@echo "üéØ Para empezar:"
	@echo "  1. make check_mcp_deps"
	@echo "  2. make arch_mcp"
	@echo "  3. ./gpt_arch_mcp"

.PHONY: build_mcp_bridge arch_mcp test_mcp test_mcp_command check_mcp_deps clean_mcp help_mcp